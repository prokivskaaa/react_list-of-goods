{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverse","setState","sort","type","reset","this","goods","visibleGoods","firstGood","secondGood","ALPHABET","localeCompare","LENGTH","length","getReorderedGoods","isResetButtonShown","isAlphabeticSort","isLengthSort","className","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,QAAU,WACR,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,KAAO,SAACC,GACN,EAAKF,SAAS,CAAEH,SAAUK,KAb9B,EAgBEC,MAAQ,WACN,EAAKH,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAnBzB,4CAuBE,WAAU,IAAD,OACP,EAAiCM,KAAKT,MAA9BE,EAAR,EAAQA,SAAUD,EAAlB,EAAkBA,WAEZS,EAvDH,SACLA,EADK,GAGJ,IADCR,EACF,EADEA,SAAUD,EACZ,EADYA,WAENU,EAAY,YAAOD,GAiBzB,OAfAC,EAAaL,MAAK,SAACM,EAAWC,GAC5B,OAAQX,GACN,KAAKL,EAASiB,SACZ,OAAOF,EAAUG,cAAcF,GACjC,KAAKhB,EAASmB,OACZ,OAAOJ,EAAUK,OAASJ,EAAWI,OACvC,QACE,OAAO,MAIThB,GACFU,EAAaP,UAGRO,EAkCSO,CAAkBpB,EAAiB,CAC/CI,WACAD,eAGIkB,EAAqBjB,IAAaL,EAASM,MAAQF,EACnDmB,EAAmBlB,IAAaL,EAASiB,SACzCO,EAAenB,IAAaL,EAASmB,OAE3C,OACE,sBAAKM,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEf,KAAK,SACLe,UAAWC,IAAW,SAAU,UAAW,CACzC,YAAaH,IAEfI,QAAS,kBAAM,EAAKlB,KAAKT,EAASiB,WALpC,iCAUA,wBACEP,KAAK,SACLe,UAAWC,IAAW,SAAU,aAAc,CAC5C,YAAaF,IAEfG,QAAS,kBAAM,EAAKlB,KAAKT,EAASmB,SALpC,4BAUA,wBACET,KAAK,SACLe,UAAWC,IAAW,SAAU,aAAc,CAC5C,YAAatB,IAEfuB,QAASf,KAAKL,QALhB,qBAUCe,GACC,wBACEZ,KAAK,SACLe,UAAU,4BACVE,QAASf,KAAKD,MAHhB,sBAUJ,6BACGE,EAAMe,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAjFpC,GAAyBC,IAAMC,WCvD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.264eb881.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((firstGood, secondGood) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return firstGood.localeCompare(secondGood);\n      case SortType.LENGTH:\n        return firstGood.length - secondGood.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean;\n  sortType: SortType;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sort = (type: SortType) => {\n    this.setState({ sortType: type });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    const goods = getReorderedGoods(goodsFromServer, {\n      sortType,\n      isReversed,\n    });\n\n    const isResetButtonShown = sortType !== SortType.NONE || isReversed;\n    const isAlphabeticSort = sortType === SortType.ALPHABET;\n    const isLengthSort = sortType === SortType.LENGTH;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-info', {\n              'is-light': !isAlphabeticSort,\n            })}\n            onClick={() => this.sort(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-success', {\n              'is-light': !isLengthSort,\n            })}\n            onClick={() => this.sort(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button', 'is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isResetButtonShown && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {goods.map((good) => (\n            <li data-cy=\"Good\" key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}